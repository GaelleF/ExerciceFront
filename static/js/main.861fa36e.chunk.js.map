{"version":3,"sources":["API/bookApi.js","Components/BookItem.js","Components/BookList.js","Components/CartItem.js","Components/Cart.js","utils/commercialOfferUtils.js","Components/Header.js","Store/Reducers/cartReducer.js","Store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","getAllBooks","a","fetch","response","json","books","console","error","getCommercialOffers","isbnArray","length","URL","join","offers","connect","state","bookCart","book","dispatch","className","data-cy","isbn","src","cover","alt","title","synopsis","price","onClick","type","value","findIndex","item","BookList","useState","setBooks","searchText","setSearchText","useEffect","then","newBooks","onChange","event","target","placeholder","filter","toLowerCase","includes","map","key","CartItem","commercialOffers","setCommercialOffers","bestOffer","setBestOffer","res","newBestOffer","initialTotalPrice","forEach","totalPrice","offer","newPrice","Math","round","sliceValue","nbSlice","floor","bestCommercialOffer","to","initialState","toggleCart","action","bookIndex","createStore","App","store","Store","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.861fa36e.chunk.js","sourcesContent":["\nconst API_URL= 'http://henri-potier.xebia.fr/books'\n\nexport const getAllBooks = async () => {\ntry {\n    const response = await fetch(API_URL)\n    const books = await response.json()\n    return books\n} catch(err){\n    console.error('Error in getting all books', err)\n}\n \n}\n\nexport const getCommercialOffers = async (isbnArray) => {\n    try {\n        if (isbnArray.length > 0) {\n        const URL =  `${API_URL}/${isbnArray.join(',')}/commercialOffers`\n        const response = await fetch(URL)\n        const offers = await response.json()\n        return offers\n        }\n        return 'no commercial offer'\n    } catch(err) {\n        console.error('Error in getting commercial offers', err)\n    }\n     \n    }","import React from 'react'\nimport './BookItem.css'\nimport {connect } from 'react-redux'\n\n\n\nconst BookItem = ({book, bookCart, dispatch}) => {\n\n    const toggleBookCart = ()=> {\n        const action = {type: 'TOGGLE_CART', value: book} \n        dispatch(action)\n    }\n\n    return (\n     <div className='book-item-container' data-cy={`book-item-${book.isbn}`}>\n         <img className='book-picture' src={book.cover} alt='couverture du livre'/>\n         <div> \n             <div className='book-item-title'> {book.title}</div>\n             <div className='book-item-synopsis'> {`${book.synopsis.join('\\n')}`} \n            </div>\n            <div className='book-item-price'>{`Prix : ${book.price} €`}</div>\n            <button className='button-cart' onClick={()=> toggleBookCart()} data-cy={`button-cart-${book.isbn}`}>\n                {bookCart.findIndex(item=>item.isbn === book.isbn) === -1 ?\n                 'Ajouter au panier': \n                 'Retirer du panier'}\n            </button>\n         </div>\n    </div>)\n}\nconst mapStateToProps=(state)=>{\n    return {bookCart: state.bookCart || []}\n  }\n//map((paragraph, index) => <p key={index} className='book-item-paragraph'> {paragraph} </p>\nexport default connect(mapStateToProps)(BookItem)","import React, {useState, useEffect} from 'react'\nimport {getAllBooks} from '../API/bookApi.js'\nimport  BookItem  from './BookItem'\nimport './BookList.css'\n\n\nconst BookList= ()=> {\n\n    const [books, setBooks] = useState([])\n    const [searchText, setSearchText] = useState('')\n\n    useEffect(()=> {\n        getAllBooks()\n        .then(newBooks=> setBooks(newBooks))      \n    }, [])\n\n    return (\n        <div>\n        <input \n            type='text'\n            value={searchText} \n            onChange={(event)=> setSearchText(event.target.value)} \n            placeholder='Rechercher'\n            className='book-list-search'\n        /> \n        <div className='book-list-container'>\n            \n            {books && books.length > 0 ? \n            books.filter(book=> book.title && book.title.toLowerCase().includes(searchText.toLowerCase()))\n                .map((book) => <BookItem key={book.isbn} book={book}/>):\n            'no book'}\n        </div>\n        </div>\n    )\n}\nexport default BookList","import React from 'react'\nimport './CartItem.css'\n\nconst CartItem = ({book, dispatch, bookCart}) => {\n    const toggleBookCart = ()=> {\n        const action = {type: 'TOGGLE_CART', value: book} \n        dispatch(action)\n    }\n    return (<div className='cart-item-container'>\n        <div className='cart-item-title'> {book.title}</div>\n        <div className='cart-item-price'> {book.price} € </div>\n        <button className='button-cart cart-item-button' onClick={()=> toggleBookCart()}>\n                {bookCart.findIndex(item=>item.isbn === book.isbn) === -1 ?\n                 'Ajouter au panier': \n                 'Retirer du panier'}\n            </button>\n    </div>)\n}\n\nexport default CartItem","import React, {useState, useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport BookItem from './BookItem'\nimport './Cart.css'\nimport {getCommercialOffers} from '../API/bookApi'\nimport {bestCommercialOffer} from '../utils/commercialOfferUtils'\nimport CartItem from './CartItem'\n\n\nconst Cart = ({ bookCart, dispatch}) => {\n    const [commercialOffers, setCommercialOffers] = useState([])\n    const [bestOffer, setBestOffer]= useState({})\n\n    useEffect( () => {\n        if (bookCart.length>0){\n           getCommercialOffers(bookCart.map(book=> book.isbn))\n           .then(res=> setCommercialOffers(res.offers || []))\n        }\n        \n    }, [bookCart])\n\n    useEffect(()=> {\n        if (bookCart && bookCart.length >0 && commercialOffers && commercialOffers.length>0)\n{       const newBestOffer= bestCommercialOffer({bookCart, commercialOffers})\n        setBestOffer(newBestOffer)\n    } \n    },[commercialOffers, bookCart])\n\n    const displayCart= ()=> {\n       return <div className='cart-detail'> \n     \n           <div className= 'cart-total'> \n               <span className='cart-total-cart'>TOTAL panier : </span> \n               <span className='cart-price-offer'>{bestOffer && bestOffer.totalPrice }  € </span> \n                 au lieu de {bestOffer && bestOffer.initialTotalPrice } € \n            </div>\n           <div className='cart-resume'>\n              <img className='cart-picture-wizard' src='./wizard-1417195_640.png' alt='sorcier illustration'/>   \n          <div className= 'cart-recap'>\n              <h4> Récapitulatif </h4>\n        {bookCart.map((book)=> <CartItem key={book.isbn} book={book} dispatch={dispatch} bookCart={bookCart}/>)}\n      </div>   </div>\n       </div> \n\n    }\n    return (\n    <div className='cart-container'>\n        <h1 className='cart-title'>Votre panier</h1>\n        {\n            bookCart.length > 0 ?\n            displayCart():\n            'Aucun livre dans le panier'\n        }\n{}\n    </div>\n    )\n}\n\nconst mapStateToProps=(state)=>{\n    return {bookCart: state.bookCart || []}\n  }\nexport default connect(mapStateToProps)(Cart)","export const bestCommercialOffer = ({bookCart, commercialOffers})=>{\n\n    let initialTotalPrice = 0;\n    bookCart.forEach((book)=> {\n        if (book.price){\n            initialTotalPrice += book.price\n        }\n    })\n    let bestOffer = {totalPrice: initialTotalPrice, offer:{type:'none'}, initialTotalPrice}\n    commercialOffers.forEach(offer=>{\n        \n        if (offer && offer.type === 'percentage' && offer.value) {\n            const newPrice= Math.round(initialTotalPrice * (100-offer.value)/100)\n            if (bestOffer.totalPrice > newPrice) {\n                bestOffer = {totalPrice: newPrice, offer, initialTotalPrice}\n            }\n        } else  if (offer && offer.type === 'minus' && offer.value) {\n            const newPrice= Math.round(initialTotalPrice - offer.value)\n            if (bestOffer.totalPrice > newPrice) {\n                bestOffer = {totalPrice: newPrice, offer, initialTotalPrice}\n            }\n        } else  if (offer && offer.type === 'slice' && offer.value && offer.sliceValue) {\n            const nbSlice= Math.floor(initialTotalPrice/offer.sliceValue)\n            const newPrice= Math.round(initialTotalPrice - (offer.value * nbSlice))\n            if (bestOffer.totalPrice > newPrice) {\n                bestOffer = {totalPrice: newPrice, offer, initialTotalPrice}\n            }\n        } \n    })\n    return bestOffer\n\n}","import React from 'react'\nimport {Link} from \"@reach/router\"\nimport './Header.css'\nimport {connect } from 'react-redux'\n\n\nconst Header = ({bookCart}) => {\n\n    return (<div className='header-container'>\n        <div className='header-title'> La bibliotheque de Henri Potier</div>\n        <nav>\n        <Link className='header-link' to=\"/\"> Liste des livres</Link>\n        <Link className='header-link' to=\"cart\"> \n        <span data-cy='header-cart'>\n            {bookCart && bookCart.length > 0 ?`Panier (${bookCart.length})`: 'Panier'}\n            </span></Link>\n        </nav>\n    </div>)\n}\n\nconst mapStateToProps=(state)=>{\n    return {bookCart: state.bookCart || []}\n  }\n\nexport default connect(mapStateToProps)(Header)","const initialState={bookCart: []}\n\nfunction toggleCart( state=initialState, action)  {\n    let nextState\n    switch(action.type){\n        case 'TOGGLE_CART':\n            const bookIndex =  state.bookCart.findIndex(item=> item.isbn === action.value.isbn) \n\n            if (bookIndex !== -1){\n                nextState =  {\n                    ...state,\n                    bookCart: state.bookCart.filter(item=> item.isbn !== action.value.isbn)\n                }\n            } else {\n                nextState =  {\n                    ...state,\n                    bookCart: [...state.bookCart, action.value]\n                }\n            }\n            return nextState || state;\n        default:\n            return state\n    }\n}\n\nexport default toggleCart","import { createStore } from 'redux'\nimport toggleCart from './Reducers/cartReducer'\n\n\n\nexport default createStore(toggleCart)","import React from 'react'\nimport './App.css'\nimport BookList from './Components/BookList'\nimport Cart from './Components/Cart'\nimport { Router } from \"@reach/router\"\nimport Header from './Components/Header'\nimport { Provider } from 'react-redux'\nimport Store from './Store/configureStore'\n\nfunction App() {\n \n  return (\n    <Provider store={Store} >\n    <div className=\"App\">\n      <Header />\n      <Router>\n        <BookList path='/' />\n        <Cart path='cart' />\n      </Router>   \n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}